#!/usr/bin/env python

import io
import math
import optparse
import os
import sys

pwd = os.path.dirname(__file__)
root = os.path.join(pwd, '..')
sys.path.append(root)

from skadi import demo
from skadi import replay


option_parser = optparse.OptionParser()
(options, args) = option_parser.parse_args()

HEADER = "PBUFDEM\0"


class InvalidDemo(RuntimeError):
  pass


for arg in args:
  print '> parsing {0}'.format(os.path.basename(arg))

  f_io = io.open(os.path.join(root, arg), 'r+b')
  if f_io.read(len(HEADER)) != HEADER:
    raise InvalidDemo('header invalid')
  f_io.read(4) # game summary offset in bytes, in file.

  demo = demo.parse(f_io)
  tick = 50000

  _replay = replay.construct(demo, f_io)
  _replay.tick = tick

  print 'at tick #{0}'.format(tick)
  for index, entity in _replay.snapshot.entities.items():
    print '  #{0}: {1}'.format(index, entity.template.recv_table.dt)
    for prop, value in iter(entity):
      print '    {0}: {1}'.format(prop, value)