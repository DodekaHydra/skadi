#!/usr/bin/env python

import io, optparse, os, sys

pwd  = os.path.dirname(__file__)
root = os.path.join(pwd, '..')
sys.path.append(root)

from skadi import mutators, world
from skadi.io import protobuf
from skadi.util.flattener import Flattener

option_parser   = optparse.OptionParser()
(options, args) = option_parser.parse_args()

test_needs_decoder = lambda st: st.needs_decoder

for arg in args:
    world = world.World()

    print '> pre-sync'

    stream = io.open(os.path.join(root, arg), 'r+b')
    demo_io = protobuf.DemoIO(stream)

    for m in iter(demo_io):
        cls = m.__class__.__name__
        if cls == 'CDemoSyncTick':
            print '> sync tick'
            break
        getattr(mutators, mutators.BY_CLASS[cls])(world, m)

    print '> receive tables'
    flattener = Flattener(world)
    for st in filter(test_needs_decoder, world.send_tables.values()):
        world.recv_tables[st.dt] = flattener.flatten(st)

    print world